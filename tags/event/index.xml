<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Event on Bear&#39;s Lodge</title>
    <link>https://mi-bear.github.io/tags/event/</link>
    <description>Recent content in Event on Bear&#39;s Lodge</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 06 Sep 2017 19:31:14 +0900</lastBuildDate>
    
	<atom:link href="https://mi-bear.github.io/tags/event/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CA.go#2</title>
      <link>https://mi-bear.github.io/post/20170906/</link>
      <pubDate>Wed, 06 Sep 2017 19:31:14 +0900</pubDate>
      
      <guid>https://mi-bear.github.io/post/20170906/</guid>
      <description>本日はありがとうございましたฅʕ•ᴥ•ʔฅ
A post shared by Michiru Shirakawa (@micchiebear) on Sep 6, 2017 at 5:57am PDT
  勉強会に行くと元気が出てもっと頑張ろうと思えるので, 時間が許す限り足を運びます。あと, ここに書いてあるのは私のメモです。
本日はサイバーエージェントさんのgoイベント。前回の#1も行ったので2回目だ〜
やはりプロダクトに導入している人たちの話は大変ためになります。感謝しかないʕ•ᴥ•ʔ
golang.org/x/sync による効率的な非同期処理  堀 良太さん
明日から導入できるとのこと。ありがたいです。
サンプルがあるので利用イメージが付きやすい。golang.org/x/syncは1.9からsyncパッケージの仲間入りを果たしたようです。
 errgroupってライトな使い方をイメージしているのかしらん。
 ぐるぐる回すバッチ処理のときに空きがあったら○○したい, なんてときに便利なsemaphore。処理の負荷ごとに重み付けができる。
 singleflight, キャッシュが切れたときに大量にリクエストが飛ぶ問題を防げる。DoChanはchannelを返却してくれる。大きなファイルのやり取りが多い場合, リクエストをまとめられるのは嬉しい。
 可読性を高めることができる!複雑なチャネルはリファクタの大将になりがちである&amp;hellip;!!  Update to Go 1.9 寺田 貴俊さん
この間フラッと1.9にアップデートしてみたけれどもきちんと見ていないので助かります。コレだ!!
マイクロサービスへの対応について。
 アップデートしたらテストが失敗したところがある。 Monotonic Clocksが含まれたことによるTimeのequalがコケた。 1.9からはwall clack + Monotonic Clocksとなる。==演算子の比較はMonotonic Clocksを含んで比較する。 time.Time()型であってもMonotonic Clocksが含まれないケースがあるから必ずしもequalにならない&amp;hellip; time.Now().Truncate(0)でMonotonic Clocksを取り除いて対処した。 go test, go vetが簡略化。優しい世界。 GoDocをよく読むべし。 Test Helperが愛情たっぷり💖  トルテリリースまでの Go Tips 16 中川 武憲さん</description>
    </item>
    
  </channel>
</rss>